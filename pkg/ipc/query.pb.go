// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: pkg/ipc/query.proto

package ipc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateStreamIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *DomainStream          `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStreamIn) Reset() {
	*x = CreateStreamIn{}
	mi := &file_pkg_ipc_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStreamIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamIn) ProtoMessage() {}

func (x *CreateStreamIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamIn.ProtoReflect.Descriptor instead.
func (*CreateStreamIn) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{0}
}

func (x *CreateStreamIn) GetTarget() *DomainStream {
	if x != nil {
		return x.Target
	}
	return nil
}

type CreateStreamOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Existed       bool                   `protobuf:"varint,1,opt,name=existed,proto3" json:"existed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStreamOut) Reset() {
	*x = CreateStreamOut{}
	mi := &file_pkg_ipc_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStreamOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamOut) ProtoMessage() {}

func (x *CreateStreamOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamOut.ProtoReflect.Descriptor instead.
func (*CreateStreamOut) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStreamOut) GetExisted() bool {
	if x != nil {
		return x.Existed
	}
	return false
}

type ListStreamsIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStreamsIn) Reset() {
	*x = ListStreamsIn{}
	mi := &file_pkg_ipc_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStreamsIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamsIn) ProtoMessage() {}

func (x *ListStreamsIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamsIn.ProtoReflect.Descriptor instead.
func (*ListStreamsIn) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{2}
}

type ListStreamsOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        []*DomainStream        `protobuf:"bytes,1,rep,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStreamsOut) Reset() {
	*x = ListStreamsOut{}
	mi := &file_pkg_ipc_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStreamsOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamsOut) ProtoMessage() {}

func (x *ListStreamsOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamsOut.ProtoReflect.Descriptor instead.
func (*ListStreamsOut) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{3}
}

func (x *ListStreamsOut) GetTarget() []*DomainStream {
	if x != nil {
		return x.Target
	}
	return nil
}

// *
// DomainStream is the named stream from which to perform operations.
type DomainStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// domain is a grouping of streams
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// *
	// stream is a specific sequence of related events
	Stream        string `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DomainStream) Reset() {
	*x = DomainStream{}
	mi := &file_pkg_ipc_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainStream) ProtoMessage() {}

func (x *DomainStream) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainStream.ProtoReflect.Descriptor instead.
func (*DomainStream) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{4}
}

func (x *DomainStream) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DomainStream) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

type SubmitIn struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// events is the particular streams
	Events *DomainStream `protobuf:"bytes,1,opt,name=events,proto3" json:"events,omitempty"`
	// kind is the event type.  useful for filtering or knowing how to interpret the contents.
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// JSON encoded body of the event in question.
	Body []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	// expectations are not currently used.
	Expectations  *Consistency `protobuf:"bytes,4,opt,name=expectations,proto3,oneof" json:"expectations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitIn) Reset() {
	*x = SubmitIn{}
	mi := &file_pkg_ipc_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitIn) ProtoMessage() {}

func (x *SubmitIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitIn.ProtoReflect.Descriptor instead.
func (*SubmitIn) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitIn) GetEvents() *DomainStream {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *SubmitIn) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *SubmitIn) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *SubmitIn) GetExpectations() *Consistency {
	if x != nil {
		return x.Expectations
	}
	return nil
}

type SubmitOut struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id is the event ID to be referred to
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// state, when set, provides a momento for ensuring the object exists
	State         *Consistency `protobuf:"bytes,2,opt,name=state,proto3,oneof" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitOut) Reset() {
	*x = SubmitOut{}
	mi := &file_pkg_ipc_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOut) ProtoMessage() {}

func (x *SubmitOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOut.ProtoReflect.Descriptor instead.
func (*SubmitOut) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitOut) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubmitOut) GetState() *Consistency {
	if x != nil {
		return x.State
	}
	return nil
}

// *
// GetIn describes the retrieval of a specific event.
type GetIn struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// events describes the expected domain and stream this event must be attached to.
	Events *DomainStream `protobuf:"bytes,1,opt,name=events,proto3" json:"events,omitempty"`
	// id is the event stream ID for the specific targeted event.
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// expectations describes how the event should be returned to the client.
	Expectations  *Consistency `protobuf:"bytes,4,opt,name=expectations,proto3,oneof" json:"expectations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIn) Reset() {
	*x = GetIn{}
	mi := &file_pkg_ipc_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIn) ProtoMessage() {}

func (x *GetIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIn.ProtoReflect.Descriptor instead.
func (*GetIn) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{7}
}

func (x *GetIn) GetEvents() *DomainStream {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetIn) GetExpectations() *Consistency {
	if x != nil {
		return x.Expectations
	}
	return nil
}

// *
// GetOut describes the results of a GetIn.
type GetOut struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// envelope describes the event metadata
	Envelope *MaterializedEnvelope `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	// *
	// payload is a JSON encoded body of the event
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// *
	// state contains the latest modification state for this event.
	State         *Consistency `protobuf:"bytes,3,opt,name=state,proto3,oneof" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOut) Reset() {
	*x = GetOut{}
	mi := &file_pkg_ipc_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOut) ProtoMessage() {}

func (x *GetOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOut.ProtoReflect.Descriptor instead.
func (*GetOut) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{8}
}

func (x *GetOut) GetEnvelope() *MaterializedEnvelope {
	if x != nil {
		return x.Envelope
	}
	return nil
}

func (x *GetOut) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GetOut) GetState() *Consistency {
	if x != nil {
		return x.State
	}
	return nil
}

// *
// Consistency is an opaque structure for describing the observation of consistency.  Used in cases to detect conflicts
// or catch up on passing events.
type Consistency struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// after indicates an event time coordinate.
	After         int64 `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consistency) Reset() {
	*x = Consistency{}
	mi := &file_pkg_ipc_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consistency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consistency) ProtoMessage() {}

func (x *Consistency) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consistency.ProtoReflect.Descriptor instead.
func (*Consistency) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{9}
}

func (x *Consistency) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

// *
// MaterializedEnvelope describes a particular event envelope.
type MaterializedEnvelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id is the unique event ID within the system
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// when is the service recorded timestamp of when the event in question occurred
	When *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
	// kind is the type of event which is represented by this ID.
	Kind          string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaterializedEnvelope) Reset() {
	*x = MaterializedEnvelope{}
	mi := &file_pkg_ipc_query_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaterializedEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterializedEnvelope) ProtoMessage() {}

func (x *MaterializedEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterializedEnvelope.ProtoReflect.Descriptor instead.
func (*MaterializedEnvelope) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{10}
}

func (x *MaterializedEnvelope) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MaterializedEnvelope) GetWhen() *timestamppb.Timestamp {
	if x != nil {
		return x.When
	}
	return nil
}

func (x *MaterializedEnvelope) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

// *
// QueryIn describes the parameters and constraints for a specific query stream.
//
// A query must specify the domain and stream for selection from.  A set of clauses filter through each event within
// the query and return a tag on the QueryOut.
type QueryIn struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// events is the stream sequence to filter from.
	Events *DomainStream `protobuf:"bytes,1,opt,name=events,proto3" json:"events,omitempty"`
	// *
	// OnKindClause matches events of a specific kind, optionally with additional clauses to further filter events of
	// interest.
	OnKind []*OnKindClause `protobuf:"bytes,2,rep,name=onKind,proto3" json:"onKind,omitempty"`
	// *
	// onID describes specific IDs we are interested in retrieving.
	OnID []*OnIDClause `protobuf:"bytes,3,rep,name=onID,proto3" json:"onID,omitempty"`
	// *
	// state describes the target consistency model to use for this particular query.  Useful for repeated queries to
	// ensure all events are observed.
	State *Consistency `protobuf:"bytes,4,opt,name=state,proto3,oneof" json:"state,omitempty"`
	// *
	// onEach matches all events within the the target domain stream.
	OnEach        *OnEachEvent `protobuf:"bytes,5,opt,name=onEach,proto3,oneof" json:"onEach,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryIn) Reset() {
	*x = QueryIn{}
	mi := &file_pkg_ipc_query_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIn) ProtoMessage() {}

func (x *QueryIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIn.ProtoReflect.Descriptor instead.
func (*QueryIn) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryIn) GetEvents() *DomainStream {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *QueryIn) GetOnKind() []*OnKindClause {
	if x != nil {
		return x.OnKind
	}
	return nil
}

func (x *QueryIn) GetOnID() []*OnIDClause {
	if x != nil {
		return x.OnID
	}
	return nil
}

func (x *QueryIn) GetState() *Consistency {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *QueryIn) GetOnEach() *OnEachEvent {
	if x != nil {
		return x.OnEach
	}
	return nil
}

// *
// OnKindClause configures a filter to match specific kinds of events matching additional datils.
type OnKindClause struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// kind to match within the stream
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// allOp contains the tag for each event matching this kind.  allOpConfig should be set if this value is set.
	AllOp *int64 `protobuf:"varint,2,opt,name=allOp,proto3,oneof" json:"allOp,omitempty"`
	// allOpConfig describes how to return each event for matching all events.  This element has no effect if allOp is
	// not set.
	AllOpConfig *ResultInclude `protobuf:"bytes,3,opt,name=allOpConfig,proto3,oneof" json:"allOpConfig,omitempty"`
	// *
	// subsets describes interest in matching a subset of a given document against each document for return.
	Subsets       []*OnKindSubsetMatch `protobuf:"bytes,4,rep,name=subsets,proto3" json:"subsets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnKindClause) Reset() {
	*x = OnKindClause{}
	mi := &file_pkg_ipc_query_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnKindClause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnKindClause) ProtoMessage() {}

func (x *OnKindClause) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnKindClause.ProtoReflect.Descriptor instead.
func (*OnKindClause) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{12}
}

func (x *OnKindClause) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *OnKindClause) GetAllOp() int64 {
	if x != nil && x.AllOp != nil {
		return *x.AllOp
	}
	return 0
}

func (x *OnKindClause) GetAllOpConfig() *ResultInclude {
	if x != nil {
		return x.AllOpConfig
	}
	return nil
}

func (x *OnKindClause) GetSubsets() []*OnKindSubsetMatch {
	if x != nil {
		return x.Subsets
	}
	return nil
}

// *
// OnKindSubsetMatch performs subset matches against the target events.
type OnKindSubsetMatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// match is the JSON document to match a subset of keys with exact matches with.
	Match []byte `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	// *
	// op is the tag to be returned
	Op int64 `protobuf:"varint,2,opt,name=op,proto3" json:"op,omitempty"`
	// *
	// style describes how each operation should be returned.
	Style         *ResultInclude `protobuf:"bytes,3,opt,name=style,proto3,oneof" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnKindSubsetMatch) Reset() {
	*x = OnKindSubsetMatch{}
	mi := &file_pkg_ipc_query_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnKindSubsetMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnKindSubsetMatch) ProtoMessage() {}

func (x *OnKindSubsetMatch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnKindSubsetMatch.ProtoReflect.Descriptor instead.
func (*OnKindSubsetMatch) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{13}
}

func (x *OnKindSubsetMatch) GetMatch() []byte {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *OnKindSubsetMatch) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *OnKindSubsetMatch) GetStyle() *ResultInclude {
	if x != nil {
		return x.Style
	}
	return nil
}

type OnIDClause struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id is the event ID to be retrieved
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// op is the tag for the target handler to be returned in the result stream
	Op int64 `protobuf:"varint,2,opt,name=op,proto3" json:"op,omitempty"`
	// style details the interested data to be returned.
	Style         *ResultInclude `protobuf:"bytes,3,opt,name=style,proto3,oneof" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnIDClause) Reset() {
	*x = OnIDClause{}
	mi := &file_pkg_ipc_query_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnIDClause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnIDClause) ProtoMessage() {}

func (x *OnIDClause) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnIDClause.ProtoReflect.Descriptor instead.
func (*OnIDClause) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{14}
}

func (x *OnIDClause) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OnIDClause) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *OnIDClause) GetStyle() *ResultInclude {
	if x != nil {
		return x.Style
	}
	return nil
}

type OnEachEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Op            int64                  `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	Style         *ResultInclude         `protobuf:"bytes,2,opt,name=style,proto3,oneof" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnEachEvent) Reset() {
	*x = OnEachEvent{}
	mi := &file_pkg_ipc_query_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnEachEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnEachEvent) ProtoMessage() {}

func (x *OnEachEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnEachEvent.ProtoReflect.Descriptor instead.
func (*OnEachEvent) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{15}
}

func (x *OnEachEvent) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *OnEachEvent) GetStyle() *ResultInclude {
	if x != nil {
		return x.Style
	}
	return nil
}

// *
// QueryOut represents a single event of interest.
type QueryOut struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// op is the operation tag which matched the event.  Generally used to manage dispatching the event to an appropriate
	// handler.
	Op int64 `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	// *
	// id is the ID of the event in question
	Id *int64 `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// *
	// envelope is the event for the target event in question
	Envelope *MaterializedEnvelope `protobuf:"bytes,3,opt,name=envelope,proto3,oneof" json:"envelope,omitempty"`
	// *
	// body is the JSON encoded by body of the target object.
	Body          []byte `protobuf:"bytes,4,opt,name=body,proto3,oneof" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOut) Reset() {
	*x = QueryOut{}
	mi := &file_pkg_ipc_query_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOut) ProtoMessage() {}

func (x *QueryOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOut.ProtoReflect.Descriptor instead.
func (*QueryOut) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{16}
}

func (x *QueryOut) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *QueryOut) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *QueryOut) GetEnvelope() *MaterializedEnvelope {
	if x != nil {
		return x.Envelope
	}
	return nil
}

func (x *QueryOut) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

// *
// ResultInclude describes how a result set should be returned.  If no value is selected then the operation tag will
// still be invoked without any additional data.  This may be useful for counting events among other reasons.
type ResultInclude struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// attaches the envelope but not the data
	Envelope *bool `protobuf:"varint,1,opt,name=envelope,proto3,oneof" json:"envelope,omitempty"`
	// *
	// body returns the JSON encoded body of the event
	Body          *bool `protobuf:"varint,2,opt,name=body,proto3,oneof" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultInclude) Reset() {
	*x = ResultInclude{}
	mi := &file_pkg_ipc_query_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultInclude) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultInclude) ProtoMessage() {}

func (x *ResultInclude) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ipc_query_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultInclude.ProtoReflect.Descriptor instead.
func (*ResultInclude) Descriptor() ([]byte, []int) {
	return file_pkg_ipc_query_proto_rawDescGZIP(), []int{17}
}

func (x *ResultInclude) GetEnvelope() bool {
	if x != nil && x.Envelope != nil {
		return *x.Envelope
	}
	return false
}

func (x *ResultInclude) GetBody() bool {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return false
}

var File_pkg_ipc_query_proto protoreflect.FileDescriptor

const file_pkg_ipc_query_proto_rawDesc = "" +
	"\n" +
	"\x13pkg/ipc/query.proto\x12\x03ipc\x1a\x1fgoogle/protobuf/timestamp.proto\";\n" +
	"\x0eCreateStreamIn\x12)\n" +
	"\x06target\x18\x01 \x01(\v2\x11.ipc.DomainStreamR\x06target\"+\n" +
	"\x0fCreateStreamOut\x12\x18\n" +
	"\aexisted\x18\x01 \x01(\bR\aexisted\"\x0f\n" +
	"\rListStreamsIn\";\n" +
	"\x0eListStreamsOut\x12)\n" +
	"\x06target\x18\x01 \x03(\v2\x11.ipc.DomainStreamR\x06target\">\n" +
	"\fDomainStream\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x16\n" +
	"\x06stream\x18\x02 \x01(\tR\x06stream\"\xa9\x01\n" +
	"\bSubmitIn\x12)\n" +
	"\x06events\x18\x01 \x01(\v2\x11.ipc.DomainStreamR\x06events\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\x129\n" +
	"\fexpectations\x18\x04 \x01(\v2\x10.ipc.ConsistencyH\x00R\fexpectations\x88\x01\x01B\x0f\n" +
	"\r_expectations\"R\n" +
	"\tSubmitOut\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12+\n" +
	"\x05state\x18\x02 \x01(\v2\x10.ipc.ConsistencyH\x00R\x05state\x88\x01\x01B\b\n" +
	"\x06_state\"\x8e\x01\n" +
	"\x05GetIn\x12)\n" +
	"\x06events\x18\x01 \x01(\v2\x11.ipc.DomainStreamR\x06events\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\x129\n" +
	"\fexpectations\x18\x04 \x01(\v2\x10.ipc.ConsistencyH\x00R\fexpectations\x88\x01\x01B\x0f\n" +
	"\r_expectations\"\x90\x01\n" +
	"\x06GetOut\x125\n" +
	"\benvelope\x18\x01 \x01(\v2\x19.ipc.MaterializedEnvelopeR\benvelope\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12+\n" +
	"\x05state\x18\x03 \x01(\v2\x10.ipc.ConsistencyH\x00R\x05state\x88\x01\x01B\b\n" +
	"\x06_state\"#\n" +
	"\vConsistency\x12\x14\n" +
	"\x05after\x18\x01 \x01(\x03R\x05after\"j\n" +
	"\x14MaterializedEnvelope\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12.\n" +
	"\x04when\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04when\x12\x12\n" +
	"\x04kind\x18\x03 \x01(\tR\x04kind\"\xf5\x01\n" +
	"\aQueryIn\x12)\n" +
	"\x06events\x18\x01 \x01(\v2\x11.ipc.DomainStreamR\x06events\x12)\n" +
	"\x06onKind\x18\x02 \x03(\v2\x11.ipc.OnKindClauseR\x06onKind\x12#\n" +
	"\x04onID\x18\x03 \x03(\v2\x0f.ipc.OnIDClauseR\x04onID\x12+\n" +
	"\x05state\x18\x04 \x01(\v2\x10.ipc.ConsistencyH\x00R\x05state\x88\x01\x01\x12-\n" +
	"\x06onEach\x18\x05 \x01(\v2\x10.ipc.OnEachEventH\x01R\x06onEach\x88\x01\x01B\b\n" +
	"\x06_stateB\t\n" +
	"\a_onEach\"\xc4\x01\n" +
	"\fOnKindClause\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\x05allOp\x18\x02 \x01(\x03H\x00R\x05allOp\x88\x01\x01\x129\n" +
	"\vallOpConfig\x18\x03 \x01(\v2\x12.ipc.ResultIncludeH\x01R\vallOpConfig\x88\x01\x01\x120\n" +
	"\asubsets\x18\x04 \x03(\v2\x16.ipc.OnKindSubsetMatchR\asubsetsB\b\n" +
	"\x06_allOpB\x0e\n" +
	"\f_allOpConfig\"r\n" +
	"\x11OnKindSubsetMatch\x12\x14\n" +
	"\x05match\x18\x01 \x01(\fR\x05match\x12\x0e\n" +
	"\x02op\x18\x02 \x01(\x03R\x02op\x12-\n" +
	"\x05style\x18\x03 \x01(\v2\x12.ipc.ResultIncludeH\x00R\x05style\x88\x01\x01B\b\n" +
	"\x06_style\"e\n" +
	"\n" +
	"OnIDClause\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x0e\n" +
	"\x02op\x18\x02 \x01(\x03R\x02op\x12-\n" +
	"\x05style\x18\x03 \x01(\v2\x12.ipc.ResultIncludeH\x00R\x05style\x88\x01\x01B\b\n" +
	"\x06_style\"V\n" +
	"\vOnEachEvent\x12\x0e\n" +
	"\x02op\x18\x01 \x01(\x03R\x02op\x12-\n" +
	"\x05style\x18\x02 \x01(\v2\x12.ipc.ResultIncludeH\x00R\x05style\x88\x01\x01B\b\n" +
	"\x06_style\"\xa1\x01\n" +
	"\bQueryOut\x12\x0e\n" +
	"\x02op\x18\x01 \x01(\x03R\x02op\x12\x13\n" +
	"\x02id\x18\x02 \x01(\x03H\x00R\x02id\x88\x01\x01\x12:\n" +
	"\benvelope\x18\x03 \x01(\v2\x19.ipc.MaterializedEnvelopeH\x01R\benvelope\x88\x01\x01\x12\x17\n" +
	"\x04body\x18\x04 \x01(\fH\x02R\x04body\x88\x01\x01B\x05\n" +
	"\x03_idB\v\n" +
	"\t_envelopeB\a\n" +
	"\x05_body\"_\n" +
	"\rResultInclude\x12\x1f\n" +
	"\benvelope\x18\x01 \x01(\bH\x00R\benvelope\x88\x01\x01\x12\x17\n" +
	"\x04body\x18\x02 \x01(\bH\x01R\x04body\x88\x01\x01B\v\n" +
	"\t_envelopeB\a\n" +
	"\x05_body2m\n" +
	"\aCommand\x129\n" +
	"\fCreateStream\x12\x13.ipc.CreateStreamIn\x1a\x14.ipc.CreateStreamOut\x12'\n" +
	"\x06Submit\x12\r.ipc.SubmitIn\x1a\x0e.ipc.SubmitOut2\xaf\x01\n" +
	"\x05Query\x126\n" +
	"\vListStreams\x12\x12.ipc.ListStreamsIn\x1a\x13.ipc.ListStreamsOut\x12\x1e\n" +
	"\x03Get\x12\n" +
	".ipc.GetIn\x1a\v.ipc.GetOut\x12&\n" +
	"\x05Query\x12\f.ipc.QueryIn\x1a\r.ipc.QueryOut0\x01\x12&\n" +
	"\x05Watch\x12\f.ipc.QueryIn\x1a\r.ipc.QueryOut0\x01B\tZ\apkg/ipcb\x06proto3"

var (
	file_pkg_ipc_query_proto_rawDescOnce sync.Once
	file_pkg_ipc_query_proto_rawDescData []byte
)

func file_pkg_ipc_query_proto_rawDescGZIP() []byte {
	file_pkg_ipc_query_proto_rawDescOnce.Do(func() {
		file_pkg_ipc_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_ipc_query_proto_rawDesc), len(file_pkg_ipc_query_proto_rawDesc)))
	})
	return file_pkg_ipc_query_proto_rawDescData
}

var file_pkg_ipc_query_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pkg_ipc_query_proto_goTypes = []any{
	(*CreateStreamIn)(nil),        // 0: ipc.CreateStreamIn
	(*CreateStreamOut)(nil),       // 1: ipc.CreateStreamOut
	(*ListStreamsIn)(nil),         // 2: ipc.ListStreamsIn
	(*ListStreamsOut)(nil),        // 3: ipc.ListStreamsOut
	(*DomainStream)(nil),          // 4: ipc.DomainStream
	(*SubmitIn)(nil),              // 5: ipc.SubmitIn
	(*SubmitOut)(nil),             // 6: ipc.SubmitOut
	(*GetIn)(nil),                 // 7: ipc.GetIn
	(*GetOut)(nil),                // 8: ipc.GetOut
	(*Consistency)(nil),           // 9: ipc.Consistency
	(*MaterializedEnvelope)(nil),  // 10: ipc.MaterializedEnvelope
	(*QueryIn)(nil),               // 11: ipc.QueryIn
	(*OnKindClause)(nil),          // 12: ipc.OnKindClause
	(*OnKindSubsetMatch)(nil),     // 13: ipc.OnKindSubsetMatch
	(*OnIDClause)(nil),            // 14: ipc.OnIDClause
	(*OnEachEvent)(nil),           // 15: ipc.OnEachEvent
	(*QueryOut)(nil),              // 16: ipc.QueryOut
	(*ResultInclude)(nil),         // 17: ipc.ResultInclude
	(*timestamppb.Timestamp)(nil), // 18: google.protobuf.Timestamp
}
var file_pkg_ipc_query_proto_depIdxs = []int32{
	4,  // 0: ipc.CreateStreamIn.target:type_name -> ipc.DomainStream
	4,  // 1: ipc.ListStreamsOut.target:type_name -> ipc.DomainStream
	4,  // 2: ipc.SubmitIn.events:type_name -> ipc.DomainStream
	9,  // 3: ipc.SubmitIn.expectations:type_name -> ipc.Consistency
	9,  // 4: ipc.SubmitOut.state:type_name -> ipc.Consistency
	4,  // 5: ipc.GetIn.events:type_name -> ipc.DomainStream
	9,  // 6: ipc.GetIn.expectations:type_name -> ipc.Consistency
	10, // 7: ipc.GetOut.envelope:type_name -> ipc.MaterializedEnvelope
	9,  // 8: ipc.GetOut.state:type_name -> ipc.Consistency
	18, // 9: ipc.MaterializedEnvelope.when:type_name -> google.protobuf.Timestamp
	4,  // 10: ipc.QueryIn.events:type_name -> ipc.DomainStream
	12, // 11: ipc.QueryIn.onKind:type_name -> ipc.OnKindClause
	14, // 12: ipc.QueryIn.onID:type_name -> ipc.OnIDClause
	9,  // 13: ipc.QueryIn.state:type_name -> ipc.Consistency
	15, // 14: ipc.QueryIn.onEach:type_name -> ipc.OnEachEvent
	17, // 15: ipc.OnKindClause.allOpConfig:type_name -> ipc.ResultInclude
	13, // 16: ipc.OnKindClause.subsets:type_name -> ipc.OnKindSubsetMatch
	17, // 17: ipc.OnKindSubsetMatch.style:type_name -> ipc.ResultInclude
	17, // 18: ipc.OnIDClause.style:type_name -> ipc.ResultInclude
	17, // 19: ipc.OnEachEvent.style:type_name -> ipc.ResultInclude
	10, // 20: ipc.QueryOut.envelope:type_name -> ipc.MaterializedEnvelope
	0,  // 21: ipc.Command.CreateStream:input_type -> ipc.CreateStreamIn
	5,  // 22: ipc.Command.Submit:input_type -> ipc.SubmitIn
	2,  // 23: ipc.Query.ListStreams:input_type -> ipc.ListStreamsIn
	7,  // 24: ipc.Query.Get:input_type -> ipc.GetIn
	11, // 25: ipc.Query.Query:input_type -> ipc.QueryIn
	11, // 26: ipc.Query.Watch:input_type -> ipc.QueryIn
	1,  // 27: ipc.Command.CreateStream:output_type -> ipc.CreateStreamOut
	6,  // 28: ipc.Command.Submit:output_type -> ipc.SubmitOut
	3,  // 29: ipc.Query.ListStreams:output_type -> ipc.ListStreamsOut
	8,  // 30: ipc.Query.Get:output_type -> ipc.GetOut
	16, // 31: ipc.Query.Query:output_type -> ipc.QueryOut
	16, // 32: ipc.Query.Watch:output_type -> ipc.QueryOut
	27, // [27:33] is the sub-list for method output_type
	21, // [21:27] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pkg_ipc_query_proto_init() }
func file_pkg_ipc_query_proto_init() {
	if File_pkg_ipc_query_proto != nil {
		return
	}
	file_pkg_ipc_query_proto_msgTypes[5].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[6].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[7].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[8].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[11].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[12].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[13].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[14].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[15].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[16].OneofWrappers = []any{}
	file_pkg_ipc_query_proto_msgTypes[17].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_ipc_query_proto_rawDesc), len(file_pkg_ipc_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_ipc_query_proto_goTypes,
		DependencyIndexes: file_pkg_ipc_query_proto_depIdxs,
		MessageInfos:      file_pkg_ipc_query_proto_msgTypes,
	}.Build()
	File_pkg_ipc_query_proto = out.File
	file_pkg_ipc_query_proto_goTypes = nil
	file_pkg_ipc_query_proto_depIdxs = nil
}
