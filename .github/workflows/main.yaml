name: Go

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        go-version: [ '1.21', '1.22' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Build and run unit tests ${{ matrix.go-version }}
        run: |
          ./build.sh
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Run integration tests
        run: |
          docker run --name pg -e POSTGRES_PASSWORD=mysecretpassword --detach postgres
          CFG_PRIMARY=$PWD/deploy/integration-tests/primary.json ./migrator primary
          CFG_PRIMARY=$PWD/deploy/integration-tests/primary.json ./integration-tests.sh
  publish_images:
    runs-on: ubuntu-latest
    needs: [unit_tests]
    if: github.triggering_actor == 'meschbach' &&  github.ref == 'refs/heads/testing-container'
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: "Setup Environment"
        run: |
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push migrator
        uses: docker/build-push-action@v5
        with:
          platforms: "linux/amd64,linux/arm64"
          file: cmd/migrator/Dockerfile
          push: false
          tags: 'meschbach/pgcqrs-migrator:${{ env.BRANCH }}'
          load: true
      - name: Build and push service
        uses: docker/build-push-action@v5
        with:
          platforms: "linux/amd64,linux/arm64"
          file: cmd/service/Dockerfile
          push: false
          tags: 'meschbach/pgcqrs:${{ env.BRANCH }}'
          load: true

